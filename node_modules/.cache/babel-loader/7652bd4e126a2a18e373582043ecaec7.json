{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-frontend-online-store/sd-07-project-frontend-online-store/src/pages/ProductsList.js\";\nimport React, { Component } from 'react';\nimport * as api from '../services/api';\nimport { addProductInLocalStorage, recoveryProductsFromLocalStorage } from '../services/cartFunctions';\nimport SearchBar from '../components/SearchBar';\nimport FilteredProductsList from '../components/FilteredProductsList';\nimport ListCategory from '../components/ListCategory';\nimport Footer from '../components/Footer';\n\nclass ProductsList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      productsToRender: [],\n      inputSearchValue: '',\n      shoppingCartItems: []\n    };\n    this.fetchByQuery = this.fetchByQuery.bind(this);\n    this.updateInputSearch = this.updateInputSearch.bind(this);\n    this.addShoppingCartItems = this.addShoppingCartItems.bind(this);\n    this.fetchByCategory = this.fetchByCategory.bind(this);\n    this.onClickCategory = this.onClickCategory.bind(this);\n  }\n\n  componentDidMount() {\n    recoveryProductsFromLocalStorage();\n  }\n\n  async onClickCategory(event) {\n    const {\n      target\n    } = event;\n    const categoryId = target.id;\n    const {\n      inputSearchValue\n    } = this.state;\n    const fetchWithCategoryAndQuery = await api.getProductsFromCategoryAndQuery(categoryId, inputSearchValue);\n    this.setState({\n      productsToRender: fetchWithCategoryAndQuery.results\n    });\n  }\n\n  async fetchByQuery() {\n    const {\n      inputSearchValue\n    } = this.state;\n    const fetchResult = await api.getProductsFromCategoryAndQuery(false, inputSearchValue);\n    this.setState({\n      productsToRender: fetchResult.results\n    });\n  }\n\n  async fetchByCategory(categoryId) {\n    const {\n      inputSearchValue\n    } = this.state;\n    const fetchWithCategoryAndQuery = await api.getProductsFromCategoryAndQuery(categoryId, inputSearchValue);\n    this.setState({\n      productsToRender: fetchWithCategoryAndQuery.results\n    });\n  }\n\n  updateInputSearch(event) {\n    const {\n      target\n    } = event;\n    this.setState({\n      inputSearchValue: target.value\n    });\n  }\n\n  async addShoppingCartItems(event) {\n    const oldList = recoveryProductsFromLocalStorage();\n    this.setState({\n      shoppingCartItems: oldList\n    });\n    const {\n      target\n    } = event;\n    const {\n      id\n    } = target;\n    const {\n      productsToRender\n    } = this.state;\n    const newItem = productsToRender.filter(product => product.id === id);\n    await this.setState(previousState => ({\n      shoppingCartItems: [...previousState.shoppingCartItems, newItem[0]]\n    }));\n    const {\n      shoppingCartItems\n    } = this.state;\n    addProductInLocalStorage(shoppingCartItems);\n  }\n\n  render() {\n    const {\n      productsToRender,\n      inputSearchValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"main-search-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.fetchByQuery,\n      inputValue: inputSearchValue,\n      inputChange: this.updateInputSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"main-category-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListCategory, {\n      onClickCategory: this.onClickCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FilteredProductsList, {\n      allProducts: productsToRender,\n      addShoppingCartItems: this.addShoppingCartItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default ProductsList;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-frontend-online-store/sd-07-project-frontend-online-store/src/pages/ProductsList.js"],"names":["React","Component","api","addProductInLocalStorage","recoveryProductsFromLocalStorage","SearchBar","FilteredProductsList","ListCategory","Footer","ProductsList","constructor","state","productsToRender","inputSearchValue","shoppingCartItems","fetchByQuery","bind","updateInputSearch","addShoppingCartItems","fetchByCategory","onClickCategory","componentDidMount","event","target","categoryId","id","fetchWithCategoryAndQuery","getProductsFromCategoryAndQuery","setState","results","fetchResult","value","oldList","newItem","filter","product","previousState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SACEC,wBADF,EAEEC,gCAFF,QAGO,2BAHP;AAIA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AACnCS,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,EADP;AAEXC,MAAAA,gBAAgB,EAAE,EAFP;AAGXC,MAAAA,iBAAiB,EAAE;AAHR,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKI,eAAL,GAAuB,KAAKA,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,gCAAgC;AACjC;;AAED,QAAMgB,eAAN,CAAsBE,KAAtB,EAA6B;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAaD,KAAnB;AACA,UAAME,UAAU,GAAGD,MAAM,CAACE,EAA1B;AACA,UAAM;AAAEZ,MAAAA;AAAF,QAAuB,KAAKF,KAAlC;AACA,UAAMe,yBAAyB,GAAG,MAAMxB,GAAG,CAACyB,+BAAJ,CACtCH,UADsC,EAEtCX,gBAFsC,CAAxC;AAIA,SAAKe,QAAL,CAAc;AACZhB,MAAAA,gBAAgB,EAAEc,yBAAyB,CAACG;AADhC,KAAd;AAGD;;AAED,QAAMd,YAAN,GAAqB;AACnB,UAAM;AAAEF,MAAAA;AAAF,QAAuB,KAAKF,KAAlC;AACA,UAAMmB,WAAW,GAAG,MAAM5B,GAAG,CAACyB,+BAAJ,CACxB,KADwB,EAExBd,gBAFwB,CAA1B;AAIA,SAAKe,QAAL,CAAc;AACZhB,MAAAA,gBAAgB,EAAEkB,WAAW,CAACD;AADlB,KAAd;AAGD;;AAED,QAAMV,eAAN,CAAsBK,UAAtB,EAAkC;AAChC,UAAM;AAAEX,MAAAA;AAAF,QAAuB,KAAKF,KAAlC;AACA,UAAMe,yBAAyB,GAAG,MAAMxB,GAAG,CAACyB,+BAAJ,CACtCH,UADsC,EAEtCX,gBAFsC,CAAxC;AAIA,SAAKe,QAAL,CAAc;AACZhB,MAAAA,gBAAgB,EAAEc,yBAAyB,CAACG;AADhC,KAAd;AAGD;;AAEDZ,EAAAA,iBAAiB,CAACK,KAAD,EAAQ;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAaD,KAAnB;AACA,SAAKM,QAAL,CAAc;AACZf,MAAAA,gBAAgB,EAAEU,MAAM,CAACQ;AADb,KAAd;AAGD;;AAED,QAAMb,oBAAN,CAA2BI,KAA3B,EAAkC;AAChC,UAAMU,OAAO,GAAG5B,gCAAgC,EAAhD;AACA,SAAKwB,QAAL,CAAc;AACZd,MAAAA,iBAAiB,EAAEkB;AADP,KAAd;AAGA,UAAM;AAAET,MAAAA;AAAF,QAAaD,KAAnB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAASF,MAAf;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAuB,KAAKD,KAAlC;AACA,UAAMsB,OAAO,GAAGrB,gBAAgB,CAACsB,MAAjB,CAAyBC,OAAD,IAAaA,OAAO,CAACV,EAAR,KAAeA,EAApD,CAAhB;AACA,UAAM,KAAKG,QAAL,CAAeQ,aAAD,KAAoB;AACtCtB,MAAAA,iBAAiB,EAAE,CAAC,GAAGsB,aAAa,CAACtB,iBAAlB,EAAqCmB,OAAO,CAAC,CAAD,CAA5C;AADmB,KAApB,CAAd,CAAN;AAGA,UAAM;AAAEnB,MAAAA;AAAF,QAAwB,KAAKH,KAAnC;AACAR,IAAAA,wBAAwB,CAACW,iBAAD,CAAxB;AACD;;AAEDuB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAAyC,KAAKF,KAApD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAG,KAAKI,YADlB;AAEE,MAAA,UAAU,EAAGF,gBAFf;AAGE,MAAA,WAAW,EAAG,KAAKI,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAQE;AAAS,MAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,eAAe,EAAG,KAAKG,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,oBAAD;AACE,MAAA,WAAW,EAAGR,gBADhB;AAEE,MAAA,oBAAoB,EAAG,KAAKM,oBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,eAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAmBD;;AAlGkC;;AAqGrC,eAAeT,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as api from '../services/api';\nimport {\n  addProductInLocalStorage,\n  recoveryProductsFromLocalStorage,\n} from '../services/cartFunctions';\nimport SearchBar from '../components/SearchBar';\nimport FilteredProductsList from '../components/FilteredProductsList';\nimport ListCategory from '../components/ListCategory';\nimport Footer from '../components/Footer';\n\nclass ProductsList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      productsToRender: [],\n      inputSearchValue: '',\n      shoppingCartItems: [],\n    };\n    this.fetchByQuery = this.fetchByQuery.bind(this);\n    this.updateInputSearch = this.updateInputSearch.bind(this);\n    this.addShoppingCartItems = this.addShoppingCartItems.bind(this);\n    this.fetchByCategory = this.fetchByCategory.bind(this);\n    this.onClickCategory = this.onClickCategory.bind(this);\n  }\n\n  componentDidMount() {\n    recoveryProductsFromLocalStorage();\n  }\n\n  async onClickCategory(event) {\n    const { target } = event;\n    const categoryId = target.id;\n    const { inputSearchValue } = this.state;\n    const fetchWithCategoryAndQuery = await api.getProductsFromCategoryAndQuery(\n      categoryId,\n      inputSearchValue,\n    );\n    this.setState({\n      productsToRender: fetchWithCategoryAndQuery.results,\n    });\n  }\n\n  async fetchByQuery() {\n    const { inputSearchValue } = this.state;\n    const fetchResult = await api.getProductsFromCategoryAndQuery(\n      false,\n      inputSearchValue,\n    );\n    this.setState({\n      productsToRender: fetchResult.results,\n    });\n  }\n\n  async fetchByCategory(categoryId) {\n    const { inputSearchValue } = this.state;\n    const fetchWithCategoryAndQuery = await api.getProductsFromCategoryAndQuery(\n      categoryId,\n      inputSearchValue,\n    );\n    this.setState({\n      productsToRender: fetchWithCategoryAndQuery.results,\n    });\n  }\n\n  updateInputSearch(event) {\n    const { target } = event;\n    this.setState({\n      inputSearchValue: target.value,\n    });\n  }\n\n  async addShoppingCartItems(event) {\n    const oldList = recoveryProductsFromLocalStorage();\n    this.setState({\n      shoppingCartItems: oldList,\n    });\n    const { target } = event;\n    const { id } = target;\n    const { productsToRender } = this.state;\n    const newItem = productsToRender.filter((product) => product.id === id);\n    await this.setState((previousState) => ({\n      shoppingCartItems: [...previousState.shoppingCartItems, newItem[0]],\n    }));\n    const { shoppingCartItems } = this.state;\n    addProductInLocalStorage(shoppingCartItems);\n  }\n\n  render() {\n    const { productsToRender, inputSearchValue } = this.state;\n    return (\n      <div className=\"main-search\">\n        <section className=\"main-search-container\">\n          <SearchBar\n            onSearch={ this.fetchByQuery }\n            inputValue={ inputSearchValue }\n            inputChange={ this.updateInputSearch }\n          />\n        </section>\n        <section className=\"main-category-container\">\n          <ListCategory onClickCategory={ this.onClickCategory } />\n          <FilteredProductsList\n            allProducts={ productsToRender }\n            addShoppingCartItems={ this.addShoppingCartItems }\n          />\n        </section>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default ProductsList;\n"]},"metadata":{},"sourceType":"module"}