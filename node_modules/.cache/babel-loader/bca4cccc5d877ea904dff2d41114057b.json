{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-frontend-online-store/sd-07-project-frontend-online-store/src/pages/ProductsList.js\";\nimport React, { Component } from 'react';\nimport * as api from '../services/api';\nimport { addProductInLocalStorage, recoveryProductsFromLocalStorage } from '../services/cartFunctions';\nimport SearchBar from '../components/SearchBar';\nimport FilteredProductsList from '../components/FilteredProductsList';\nimport ListCategory from '../components/ListCategory';\n\nclass ProductsList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      productsToRender: undefined,\n      inputSearchValue: '',\n      shoppingCartItems: []\n    };\n    this.fetchByQuery = this.fetchByQuery.bind(this);\n    this.updateInputSearch = this.updateInputSearch.bind(this);\n    this.addShoppingCartItems = this.addShoppingCartItems.bind(this);\n    this.fetchByCategory = this.fetchByCategory.bind(this);\n    this.onClickCategory = this.onClickCategory.bind(this);\n  }\n\n  componentDidMount() {\n    recoveryProductsFromLocalStorage();\n  }\n\n  async onClickCategory(event) {\n    const {\n      target\n    } = event;\n    const categoryId = target.id;\n    const {\n      productsToRender\n    } = this.state; // const newList = productsToRender.filter((product) => product.category_id === categoryId);\n\n    const result = await this.fetchByCategory(categoryId);\n    console.log(result);\n    return result; // this.setState({\n    //   productsToRender: newList,\n    // });\n    // this.fetchByCategory(categoryId);\n  }\n\n  async fetchByQuery() {\n    const {\n      inputSearchValue\n    } = this.state;\n    const fetchResult = await api.getProductsFromCategoryAndQuery(false, inputSearchValue);\n    console.log(fetchResult);\n    this.setState({\n      productsToRender: fetchResult.results\n    });\n  }\n\n  async fetchByCategory(categoryId) {\n    // const verifyIfInputValueIsEmpty = 0;\n    const {\n      inputSearchValue\n    } = this.state; // if (inputSearchValue.length === verifyIfInputValueIsEmpty) {\n    //   const fetchOnlyWithCategory = await api.getProductsFromCategoryAndQuery(\n    //     categoryId,\n    //     false,\n    //   );\n    //   this.setState({\n    //     productsToRender: fetchOnlyWithCategory.results,\n    //   });\n    // }\n\n    const fetchWithCategoryAndQuery = await api.getProductsFromCategoryAndQuery(categoryId, inputSearchValue);\n    this.setState({\n      productsToRender: fetchWithCategoryAndQuery.results\n    });\n  }\n\n  updateInputSearch(event) {\n    const {\n      target\n    } = event;\n    this.setState({\n      inputSearchValue: target.value\n    });\n  }\n\n  async addShoppingCartItems(event) {\n    const oldList = recoveryProductsFromLocalStorage();\n    this.setState({\n      shoppingCartItems: oldList\n    });\n    const {\n      target\n    } = event;\n    const {\n      id\n    } = target;\n    const {\n      productsToRender\n    } = this.state;\n    const newItem = productsToRender.filter(product => product.id === id);\n    await this.setState(previousState => ({\n      shoppingCartItems: [...previousState.shoppingCartItems, newItem[0]]\n    }));\n    const {\n      shoppingCartItems\n    } = this.state;\n    addProductInLocalStorage(shoppingCartItems);\n  }\n\n  render() {\n    const {\n      productsToRender,\n      inputSearchValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"main-search-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.fetchByQuery,\n      inputValue: inputSearchValue,\n      inputChange: this.updateInputSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"main-category-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListCategory, {\n      onClickCategory: this.onClickCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FilteredProductsList, {\n      allProducts: productsToRender,\n      addShoppingCartItems: this.addShoppingCartItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default ProductsList;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-frontend-online-store/sd-07-project-frontend-online-store/src/pages/ProductsList.js"],"names":["React","Component","api","addProductInLocalStorage","recoveryProductsFromLocalStorage","SearchBar","FilteredProductsList","ListCategory","ProductsList","constructor","state","productsToRender","undefined","inputSearchValue","shoppingCartItems","fetchByQuery","bind","updateInputSearch","addShoppingCartItems","fetchByCategory","onClickCategory","componentDidMount","event","target","categoryId","id","result","console","log","fetchResult","getProductsFromCategoryAndQuery","setState","results","fetchWithCategoryAndQuery","value","oldList","newItem","filter","product","previousState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as api from '../services/api';\nimport {\n  addProductInLocalStorage,\n  recoveryProductsFromLocalStorage,\n} from '../services/cartFunctions';\nimport SearchBar from '../components/SearchBar';\nimport FilteredProductsList from '../components/FilteredProductsList';\nimport ListCategory from '../components/ListCategory';\n\nclass ProductsList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      productsToRender: undefined,\n      inputSearchValue: '',\n      shoppingCartItems: [],\n    };\n    this.fetchByQuery = this.fetchByQuery.bind(this);\n    this.updateInputSearch = this.updateInputSearch.bind(this);\n    this.addShoppingCartItems = this.addShoppingCartItems.bind(this);\n    this.fetchByCategory = this.fetchByCategory.bind(this);\n    this.onClickCategory = this.onClickCategory.bind(this);\n  }\n\n  componentDidMount() {\n    recoveryProductsFromLocalStorage();\n  }\n\n  async onClickCategory(event) {\n    const { target } = event;\n    const categoryId = target.id;\n    const { productsToRender } = this.state;\n    // const newList = productsToRender.filter((product) => product.category_id === categoryId);\n    const result = await this.fetchByCategory(categoryId);\n    console.log(result);\n    return result;\n    // this.setState({\n    //   productsToRender: newList,\n    // });\n    // this.fetchByCategory(categoryId);\n  }\n\n  async fetchByQuery() {\n    const { inputSearchValue } = this.state;\n    const fetchResult = await api.getProductsFromCategoryAndQuery(\n      false,\n      inputSearchValue,\n    );\n    console.log(fetchResult);\n    this.setState({\n      productsToRender: fetchResult.results,\n    });\n  }\n\n  async fetchByCategory(categoryId) {\n    // const verifyIfInputValueIsEmpty = 0;\n    const { inputSearchValue } = this.state;\n    // if (inputSearchValue.length === verifyIfInputValueIsEmpty) {\n    //   const fetchOnlyWithCategory = await api.getProductsFromCategoryAndQuery(\n    //     categoryId,\n    //     false,\n    //   );\n    //   this.setState({\n    //     productsToRender: fetchOnlyWithCategory.results,\n    //   });\n    // }\n    const fetchWithCategoryAndQuery = await api.getProductsFromCategoryAndQuery(\n      categoryId,\n      inputSearchValue,\n    );\n    this.setState({\n      productsToRender: fetchWithCategoryAndQuery.results,\n    });\n  }\n\n  updateInputSearch(event) {\n    const { target } = event;\n    this.setState({\n      inputSearchValue: target.value,\n    });\n  }\n\n  async addShoppingCartItems(event) {\n    const oldList = recoveryProductsFromLocalStorage();\n    this.setState({\n      shoppingCartItems: oldList,\n    });\n    const { target } = event;\n    const { id } = target;\n    const { productsToRender } = this.state;\n    const newItem = productsToRender.filter((product) => product.id === id);\n    await this.setState((previousState) => ({\n      shoppingCartItems: [...previousState.shoppingCartItems, newItem[0]],\n    }));\n    const { shoppingCartItems } = this.state;\n    addProductInLocalStorage(shoppingCartItems);\n  }\n\n  render() {\n    const { productsToRender, inputSearchValue } = this.state;\n    return (\n      <div className=\"main-search\">\n        <section className=\"main-search-container\">\n          <SearchBar\n            onSearch={ this.fetchByQuery }\n            inputValue={ inputSearchValue }\n            inputChange={ this.updateInputSearch }\n          />\n        </section>\n        <section className=\"main-category-container\">\n          <ListCategory onClickCategory={ this.onClickCategory } />\n          <FilteredProductsList\n            allProducts={ productsToRender }\n            addShoppingCartItems={ this.addShoppingCartItems }\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default ProductsList;\n"]},"metadata":{},"sourceType":"module"}