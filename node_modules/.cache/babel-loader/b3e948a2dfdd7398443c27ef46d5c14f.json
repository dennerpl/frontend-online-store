{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-frontend-online-store/sd-07-project-frontend-online-store/src/components/ReviewForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactStars from 'react-stars';\n\nclass ReviewForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addNewReview = this.addNewReview.bind(this);\n    this.ratingChanged = this.ratingChanged.bind(this);\n    this.state = {\n      email: '',\n      comments: '',\n      rating: 0\n    };\n  }\n\n  async addNewReview() {\n    const {\n      onClick\n    } = this.props;\n    await onClick(this.state);\n    this.setState({\n      email: '',\n      rating: 0,\n      comments: ''\n    });\n  }\n\n  updateReview(field, newValue) {\n    this.setState({\n      [field]: newValue\n    });\n  }\n\n  ratingChanged(newRating) {\n    this.setState({\n      rating: newRating\n    });\n  }\n\n  render() {\n    const {\n      email,\n      comments,\n      rating\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Nos conte o que achou do produto:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Email\",\n      required: \"required\",\n      value: email,\n      onChange: event => this.updateReview('email', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactStars, {\n      count: 5,\n      onChange: this.ratingChanged,\n      size: 24,\n      color2: \"#ffd700\",\n      half: false,\n      value: rating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      \"data-testid\": \"product-detail-evaluation\",\n      placeholder: \"Mensagem (opcional)\",\n      value: comments,\n      onChange: event => this.updateReview('comments', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.addNewReview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"AVALIAR\"));\n  }\n\n}\n\nReviewForm.propTypes = {\n  onClick: PropTypes.func.isRequired\n};\nexport default ReviewForm;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-frontend-online-store/sd-07-project-frontend-online-store/src/components/ReviewForm.js"],"names":["React","PropTypes","ReactStars","ReviewForm","Component","constructor","props","addNewReview","bind","ratingChanged","state","email","comments","rating","onClick","setState","updateReview","field","newValue","newRating","render","event","target","value","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAGA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AAEA,SAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AAED,QAAMN,YAAN,GAAqB;AACnB,UAAM;AAAEO,MAAAA;AAAF,QAAc,KAAKR,KAAzB;AACA,UAAMQ,OAAO,CAAC,KAAKJ,KAAN,CAAb;AACA,SAAKK,QAAL,CAAc;AACZJ,MAAAA,KAAK,EAAE,EADK;AAEZE,MAAAA,MAAM,EAAE,CAFI;AAGZD,MAAAA,QAAQ,EAAE;AAHE,KAAd;AAKD;;AAEDI,EAAAA,YAAY,CAACC,KAAD,EAAQC,QAAR,EAAkB;AAC5B,SAAKH,QAAL,CAAc;AAAE,OAACE,KAAD,GAASC;AAAX,KAAd;AACD;;AAEDT,EAAAA,aAAa,CAACU,SAAD,EAAY;AACvB,SAAKJ,QAAL,CAAc;AAAEF,MAAAA,MAAM,EAAEM;AAAV,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA8B,KAAKH,KAAzC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,OAFd;AAGE,MAAA,QAAQ,EAAC,UAHX;AAIE,MAAA,KAAK,EAAGC,KAJV;AAKE,MAAA,QAAQ,EAAIU,KAAD,IAAW,KAAKL,YAAL,CAAkB,OAAlB,EAA2BK,KAAK,CAACC,MAAN,CAAaC,KAAxC,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAG,CADV;AAEE,MAAA,QAAQ,EAAG,KAAKd,aAFlB;AAGE,MAAA,IAAI,EAAG,EAHT;AAIE,MAAA,MAAM,EAAC,SAJT;AAKE,MAAA,IAAI,EAAG,KALT;AAME,MAAA,KAAK,EAAGI,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,eAmBE;AACE,qBAAY,2BADd;AAEE,MAAA,WAAW,EAAC,qBAFd;AAGE,MAAA,KAAK,EAAGD,QAHV;AAIE,MAAA,QAAQ,EAAIS,KAAD,IAAW,KAAKL,YAAL,CAAkB,UAAlB,EAA8BK,KAAK,CAACC,MAAN,CAAaC,KAA3C,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,eAyBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAG,KAAKhB,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAzBF,CADF;AA6BD;;AA/DsC;;AAkEzCJ,UAAU,CAACqB,SAAX,GAAuB;AACrBV,EAAAA,OAAO,EAAEb,SAAS,CAACwB,IAAV,CAAeC;AADH,CAAvB;AAIA,eAAevB,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactStars from 'react-stars';\n\n\nclass ReviewForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addNewReview = this.addNewReview.bind(this);\n    this.ratingChanged = this.ratingChanged.bind(this);\n\n    this.state = {\n      email: '',\n      comments: '',\n      rating: 0,\n    };\n  }\n\n  async addNewReview() {\n    const { onClick } = this.props;\n    await onClick(this.state);\n    this.setState({\n      email: '',\n      rating: 0,\n      comments: '',\n    });\n  }\n\n  updateReview(field, newValue) {\n    this.setState({ [field]: newValue });\n  }\n\n  ratingChanged(newRating) {\n    this.setState({ rating: newRating });\n  }\n\n  render() {\n    const { email, comments, rating } = this.state;\n    return (\n      <div>\n        <h2>Nos conte o que achou do produto:</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          required=\"required\"\n          value={ email }\n          onChange={ (event) => this.updateReview('email', event.target.value) }\n        />\n        <div>\n          <ReactStars\n            count={ 5 }\n            onChange={ this.ratingChanged }\n            size={ 24 }\n            color2=\"#ffd700\"\n            half={ false }\n            value={ rating }\n          />\n        </div>\n        <textarea\n          data-testid=\"product-detail-evaluation\"\n          placeholder=\"Mensagem (opcional)\"\n          value={ comments }\n          onChange={ (event) => this.updateReview('comments', event.target.value) }\n        />\n        <button type=\"button\" onClick={ this.addNewReview }>AVALIAR</button>\n      </div>\n    );\n  }\n}\n\nReviewForm.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ReviewForm;\n"]},"metadata":{},"sourceType":"module"}