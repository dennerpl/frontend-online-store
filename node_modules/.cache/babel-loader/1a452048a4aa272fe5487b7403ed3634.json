{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-frontend-online-store/sd-07-project-frontend-online-store/src/components/ReviewList.js\";\nimport React, { Component } from 'react';\nimport ReviewForm from './ReviewForm'; // import reviews from '../services/reviews';\n\nimport { addReviewInLocalStorage, recoveryReviewsFromLocalStorage } from '../services/reviewsFunctions';\n\nclass ReviewList extends Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n    this.state = {\n      reviewsObj: recoveryReviewsFromLocalStorage()\n    };\n  }\n\n  componentDidMount() {\n    const localStorageList = recoveryReviewsFromLocalStorage();\n    this.setState({\n      reviewsObj: localStorageList\n    });\n  }\n\n  async onClick(reviewData) {\n    const currentReviews = recoveryReviewsFromLocalStorage();\n    const comparatorLengthNumber = 0;\n\n    if (currentReviews.length !== comparatorLengthNumber) {\n      const nextId = currentReviews[currentReviews.length - 1].id + 1;\n      reviewData.id = nextId;\n    } else {\n      const nextId = 1;\n      reviewData.id = nextId;\n    }\n\n    this.setState(previousState => ({\n      reviewsObj: [...previousState.reviewsObj, reviewData]\n    }), () => {\n      const {\n        reviewsObj\n      } = this.state;\n      addReviewInLocalStorage(reviewsObj);\n    }); // const oldList = recoveryReviewsFromLocalStorage();\n    // this.setState({\n    //   reviewsObj: oldList,\n    // })\n    // console.log(oldList);\n    // console.log(currentReviews);\n    // console.log(nextId);\n    // const newReview = { ...reviewData, id: nextId };\n    // console.log(newReview)\n    // this.setState((previousState) => ({\n    //   reviewsObj: [...previousState.reviewsObj, reviewData],\n    // }, () => {\n    //   addReviewInLocalStorage(this.state.reviewsObj);\n    //   // console.log(recoveryReviewsFromLocalStorage());\n    //   const newReviewsList = this.state.reviewsObj;\n    //   // console.log(newReviewsList);\n    // }));\n    // const newReviewsList = this.state.reviewsObj\n    // console.log(newReviewsList);\n    // addReviewInLocalStorage(newReviewList);\n  }\n\n  render() {\n    const {\n      reviewsObj\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReviewForm, {\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, reviewsObj.map(({\n      email,\n      rating,\n      comments,\n      id\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, email), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, rating), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, comments)))));\n  }\n\n}\n\nexport default ReviewList;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-frontend-online-store/sd-07-project-frontend-online-store/src/components/ReviewList.js"],"names":["React","Component","ReviewForm","addReviewInLocalStorage","recoveryReviewsFromLocalStorage","ReviewList","constructor","props","onClick","bind","state","reviewsObj","componentDidMount","localStorageList","setState","reviewData","currentReviews","comparatorLengthNumber","length","nextId","id","previousState","render","map","email","rating","comments"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AACA,SACEC,uBADF,EAEEC,+BAFF,QAGO,8BAHP;;AAKA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAEP,+BAA+B;AADhC,KAAb;AAGD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,gBAAgB,GAAGT,+BAA+B,EAAxD;AACA,SAAKU,QAAL,CAAc;AACZH,MAAAA,UAAU,EAAEE;AADA,KAAd;AAGD;;AAED,QAAML,OAAN,CAAcO,UAAd,EAA0B;AACxB,UAAMC,cAAc,GAAGZ,+BAA+B,EAAtD;AACA,UAAMa,sBAAsB,GAAG,CAA/B;;AACA,QAAID,cAAc,CAACE,MAAf,KAA0BD,sBAA9B,EAAsD;AACpD,YAAME,MAAM,GAAGH,cAAc,CAACA,cAAc,CAACE,MAAf,GAAwB,CAAzB,CAAd,CAA0CE,EAA1C,GAA+C,CAA9D;AACAL,MAAAA,UAAU,CAACK,EAAX,GAAgBD,MAAhB;AACD,KAHD,MAGO;AACL,YAAMA,MAAM,GAAG,CAAf;AACAJ,MAAAA,UAAU,CAACK,EAAX,GAAgBD,MAAhB;AACD;;AACD,SAAKL,QAAL,CAAeO,aAAD,KAAoB;AAChCV,MAAAA,UAAU,EAAE,CAAC,GAAGU,aAAa,CAACV,UAAlB,EAA8BI,UAA9B;AADoB,KAApB,CAAd,EAEI,MAAM;AACR,YAAM;AAAEJ,QAAAA;AAAF,UAAiB,KAAKD,KAA5B;AACAP,MAAAA,uBAAuB,CAACQ,UAAD,CAAvB;AACD,KALD,EAVwB,CAgBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAG,KAAKF,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,UAAU,CAACY,GAAX,CAAe,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,QAAjB;AAA2BN,MAAAA;AAA3B,KAAD,kBACd;AAAK,MAAA,GAAG,EAAGA,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOI,KAAP,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,MAAP,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,QAAJ,CAHF,CADD,CADH,CAFF,CADF;AAaD;;AAxEgC;;AA2EnC,eAAerB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReviewForm from './ReviewForm';\n// import reviews from '../services/reviews';\nimport {\n  addReviewInLocalStorage,\n  recoveryReviewsFromLocalStorage,\n} from '../services/reviewsFunctions';\n\nclass ReviewList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n\n    this.state = {\n      reviewsObj: recoveryReviewsFromLocalStorage(),\n    };\n  }\n\n  componentDidMount() {\n    const localStorageList = recoveryReviewsFromLocalStorage();\n    this.setState({\n      reviewsObj: localStorageList,\n    });\n  }\n\n  async onClick(reviewData) {\n    const currentReviews = recoveryReviewsFromLocalStorage();\n    const comparatorLengthNumber = 0;\n    if (currentReviews.length !== comparatorLengthNumber) {\n      const nextId = currentReviews[currentReviews.length - 1].id + 1;\n      reviewData.id = nextId;\n    } else {\n      const nextId = 1;\n      reviewData.id = nextId;\n    }\n    this.setState((previousState) => ({\n      reviewsObj: [...previousState.reviewsObj, reviewData],\n    }), () => {\n      const { reviewsObj } = this.state;\n      addReviewInLocalStorage(reviewsObj);\n    });\n    // const oldList = recoveryReviewsFromLocalStorage();\n    // this.setState({\n    //   reviewsObj: oldList,\n    // })\n    // console.log(oldList);\n    // console.log(currentReviews);\n    // console.log(nextId);\n    // const newReview = { ...reviewData, id: nextId };\n    // console.log(newReview)\n    // this.setState((previousState) => ({\n    //   reviewsObj: [...previousState.reviewsObj, reviewData],\n    // }, () => {\n    //   addReviewInLocalStorage(this.state.reviewsObj);\n    //   // console.log(recoveryReviewsFromLocalStorage());\n    //   const newReviewsList = this.state.reviewsObj;\n    //   // console.log(newReviewsList);\n    // }));\n    // const newReviewsList = this.state.reviewsObj\n    // console.log(newReviewsList);\n    // addReviewInLocalStorage(newReviewList);\n  }\n\n  render() {\n    const { reviewsObj } = this.state;\n\n    return (\n      <div>\n        <ReviewForm onClick={ this.onClick } />\n        <div>\n          {reviewsObj.map(({ email, rating, comments, id }) => (\n            <div key={ id }>\n              <span>{email}</span>\n              <span>{rating}</span>\n              <p>{comments}</p>\n            </div>))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReviewList;\n"]},"metadata":{},"sourceType":"module"}